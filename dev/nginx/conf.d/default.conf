
server{
    listen 80;
    server_name  localhost;
    root   /data/www/web;
    index  index.php index.html index.htm;
    # location / {
    #     index  index.php index.html index.htm;
    #      #如果请求既不是一个文件，也不是一个目录，则执行一下重写规则
    #      if (!-e $request_filename)
    #      {
    #         #地址作为将参数rewrite到index.php上。
    #         rewrite ^/(.*)$ /index.php?s=$1;
    #         #若是子目录则使用下面这句，将subdir改成目录名称即可。
    #         #rewrite ^/subdir/(.*)$ /subdir/index.php?s=$1;
    #      }
    # }

    location / {
        try_files $uri $uri/ /index.php;
    }
	
	# location /api/ {
    #     index  index.php index.html index.htm;
    #      #如果请求既不是一个文件，也不是一个目录，则执行一下重写规则
    #      if (!-e $request_filename)
    #      {
    #         #地址作为将参数rewrite到index.php上。
    #         #rewrite ^/(.*)$ /index.php?s=$1;
    #         #若是子目录则使用下面这句，将subdir改成目录名称即可。
    #         rewrite ^/api/(.*)$ /api/index.php?s=$1;
    #      }
    # }
	
	# location ~* ^\/upload\/.+\.(html|php)$ {
	# 	return 404;
	# }
	
	# location ~* ^\/plugins\/.+\.(html|php)$ {
	# 	return 404;
	# }
	
	# location ~* ^\/themes\/.+\.(html|php)$ {
	# 	return 404;
	# }
	
    #proxy the php scripts to php-fpm-zx
    location ~ \.php {
            include fastcgi_params;
            ##pathinfo支持start
            #定义变量 $path_info ，用于存放pathinfo信息
            set $path_info "";
            #定义变量 $real_script_name，用于存放真实地址
            set $real_script_name $fastcgi_script_name;
            #如果地址与引号内的正则表达式匹配
            if ($fastcgi_script_name ~ "^(.+?\.php)(/.+)$") {
                    #将文件地址赋值给变量 $real_script_name
                    set $real_script_name $1;
                    #将文件地址后的参数赋值给变量 $path_info
                    set $path_info $2;
            }
            #配置fastcgi的一些参数
            fastcgi_param SCRIPT_FILENAME $document_root$real_script_name;
            fastcgi_param SCRIPT_NAME $real_script_name;
            fastcgi_param PATH_INFO $path_info;
            ###pathinfo支持end
        fastcgi_intercept_errors on;
        
        fastcgi_pass   php-fpm-zx:9000;
        # fastcgi_pass 如果是 sock形式，可能是下面的配置
        # fastcgi_pass unix:/tmp/php-cgi.sock
    }

}

# server {
#     charset utf-8;
#     client_max_body_size 128M;
#     listen       80;
#     server_name  localhost;

#     #charset koi8-r;
#     #access_log  /var/log/nginx/host.access.log  main;
#     root   /data/www/public;
#     index  index.php index.html index.htm;

#     location /zv.html {
#             return 200  "successed by zv";
#     }

#     location / {
        
#         if (!-e $request_filename) {
#             rewrite  ^(.*)$  /index.php?s=$1  last;
#             break;
#         }
#     }

#     #error_page  404              /404.html;

#     # redirect server error pages to the static page /50x.html
#     #
#     error_page   500 502 503 504  /50x.html;
#     location = /50x.html {
#         root   /usr/share/nginx/html;
#     }

#     # proxy the PHP scripts to Apache listening on 127.0.0.1:80
#     #
#     #location ~ \.php$ {
#     #    proxy_pass   http://127.0.0.1;
#     #}

#     # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
#     #
#     #location ~ \.php$ {
#     #    root           html;
#     #    fastcgi_pass   127.0.0.1:9000;
#     #    fastcgi_index  index.php;
#     #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
#     #    include        fastcgi_params;
#     #}
#     location ~ \.php$ {
#         fastcgi_pass   php-fpm-zx:9000;
#         fastcgi_index  index.php;
#         fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
#         include        fastcgi_params;
#     }

#     # deny access to .htaccess files, if Apache's document root
#     # concurs with nginx's one
#     #
#     #location ~ /\.ht {
#     #    deny  all;
#     #}
#     location ~ \.(svn|git)$ {
#         deny all;
#     }
# }
